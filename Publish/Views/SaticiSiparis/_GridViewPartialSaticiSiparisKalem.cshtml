@{
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewKalem";
        settings.CallbackRouteValues = new { Controller = "SaticiSiparis", Action = "GridViewPartialSaticiSiparisKalem" };


        settings.KeyFieldName = "Sira";

        settings.SettingsPager.Visible = false;
        settings.Settings.ShowGroupPanel = false;
        settings.Settings.ShowFilterRow = false;
        settings.Settings.ShowFooter = true;
        settings.SettingsBehavior.AllowSelectByRowClick = false;

        settings.SettingsAdaptivity.AdaptivityMode = GridViewAdaptivityMode.Off;
        settings.SettingsAdaptivity.AdaptiveColumnPosition = GridViewAdaptiveColumnPosition.Right;
        settings.SettingsAdaptivity.AdaptiveDetailColumnCount = 1;
        settings.SettingsAdaptivity.AllowOnlyOneAdaptiveDetailExpanded = false;
        settings.SettingsAdaptivity.HideDataCellsAtWindowInnerWidth = 0;
        settings.SettingsPager.PageSize = 100;

        //settings.Columns.Add("FatNo");
        settings.Columns.Add("Sira");
        //settings.Columns.Add("Cari_Kod");
        //settings.Columns.Add("Cari_Isim");

        //settings.Columns.Add("Tarih").PropertiesEdit.DisplayFormatString = "d";
        //settings.Columns.Add("StokKodu");
        settings.Columns.Add(column =>
            {
                column.FieldName = "StokKodu";
                column.Settings.ShowFilterRowMenuLikeItem = DefaultBoolean.True;
            });

        //settings.Columns.Add("StokIsim");
        settings.Columns.Add(column =>
            {
                column.FieldName = "StokIsim";
                column.Settings.ShowFilterRowMenuLikeItem = DefaultBoolean.True;
            });

        settings.Columns.Add("Miktar").PropertiesEdit.DisplayFormatString = "n";
        settings.Columns.Add("Fiyat").PropertiesEdit.DisplayFormatString = "n";
        //settings.Columns.Add("MaliyetFiyat").PropertiesEdit.DisplayFormatString = "c";
        //settings.Columns.Add("BrutFiyat").PropertiesEdit.DisplayFormatString = "c";
        //settings.Columns.Add("IskontoOran").PropertiesEdit.DisplayFormatString = "n";
        //settings.Columns.Add("IskontoluTutar").PropertiesEdit.DisplayFormatString = "n";
        //settings.Columns.Add("Kdv");
        settings.Columns.Add("ToplamTutar").PropertiesEdit.DisplayFormatString = "n";
        //settings.Columns.Add("ToplamMaliyetTutar").PropertiesEdit.DisplayFormatString = "c";
        //settings.Columns.Add("DepoKodu");
        //settings.Columns.Add("DepoAdi");
        //settings.Columns.Add("Bakiye").PropertiesEdit.DisplayFormatString = "n";


        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(string.Format("<span class=\"btn btn-info btn-sm\" data-id='{0}' onclick=\"KalemEdit(this);\"> Düzenle</span>", c.KeyValue));
            });
        });

        settings.Columns.Add(column =>
        {
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(string.Format("<span class=\"btn btn-danger btn-sm\" data-id='{0}' onclick=\"KalemDelete(this);\"> Sil</span>", c.KeyValue));
            });
        });
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Miktar").DisplayFormat = "Toplam = {0}";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "Fiyat").DisplayFormat = "Toplam = {0}";
        settings.TotalSummary.Add(DevExpress.Data.SummaryItemType.Sum, "ToplamTutar").DisplayFormat = "Toplam = {0}";
    });
}
@grid.Bind(Model).GetHtml()

<script>

    function KalemDelete(sender) {
        var idObj = $(sender).data();
        $.ajax({
               url: '@Url.Action("GridViewPartialSaticiSiparisKalemDelete", "SaticiSiparis")',
               type: 'GET',
            data: {
                id: idObj.id
                },
            success: function (data) {

                GridViewKalem.Refresh();

                       },
                       error: function (hata, ajaxOptions, thrownError) {
                            alert(thrownError);
                       }
         });
    }

    function KalemEdit(sender) {
        var idObj = $(sender).data();
        $("#AddKalemButton").trigger('click');

        $.ajax({
               url: '@Url.Action("GetAddedKalem", "SaticiSiparis")',
               type: 'GET',
            data: {
                id: idObj.id
                },
            success: function (data) {
                var Stok = JSON.parse(data);
                if ('null' != Stok.Sira) {
                    document.getElementById("Sira").value = Stok.Sira;
                }
                if ('null' != Stok.StokKodu) {
                    document.getElementById("GridLookupStok_I").value = Stok.StokKodu;
                }
                if ('null' != Stok.StokIsim) {
                    document.getElementById("StokAdi").value = Stok.StokIsim;
                }
                if ('null' != Stok.Miktar) {
                    document.getElementById("Miktar").value = Stok.Miktar;
                }
                if ('null' != Stok.Fiyat) {
                    document.getElementById("Fiyat").value = Stok.Fiyat;
                }

                if ('null' != Stok.ToplamTutar) {
                    document.getElementById("Tutar").value = Stok.ToplamTutar;
                }




                GridViewKalem.Refresh();

                       },
                       error: function (hata, ajaxOptions, thrownError) {
                            alert(thrownError);
                       }
         });
    }
</script>